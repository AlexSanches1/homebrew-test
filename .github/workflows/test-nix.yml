name: Nix CI

on:
  push:
    branches: [ "main" ]
  pull_request:

jobs:
  test-nix:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]

    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Install Nix (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          # Install Nix
          curl -L https://nixos.org/nix/install | sh
          # Source Nix so the 'nix' command is available in this shell
          source /home/runner/.nix-profile/etc/profile.d/nix.sh
          nix --version

          # Enable experimental features
          mkdir -p ~/.config/nix
          echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf

      - name: Install Nix (macOS)
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          # Install Nix (daemon mode on macOS)
          sh <(curl -L https://nixos.org/nix/install) --daemon
          # Source Nix so 'nix' is available
          source /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh
          nix --version

          # Enable experimental features
          mkdir -p ~/.config/nix
          echo "experimental-features = nix-command flakes" >> ~/.config/nix/nix.conf

      - name: Install from local flake
        shell: bash
        run: |
          # Re-source Nix profile (especially on Ubuntu)
          if [ -f /home/runner/.nix-profile/etc/profile.d/nix.sh ]; then
            source /home/runner/.nix-profile/etc/profile.d/nix.sh
          fi

          # Double-check our config
          cat ~/.config/nix/nix.conf || true

          # Install the default package in flake.nix (current directory)
          nix profile install .

      - name: Check asimov
        shell: bash
        run: |
          asimov --version
