pkgname=asimov-cli
pkgver=25.0.0_dev.2
pkgrel=1
pkgdesc="Asimov CLI Tool"
arch=('x86_64' 'aarch64')
url="https://github.com/asimov-platform/asimov-cli"
license=('MIT')
depends=()

# Use the correct release assets
source_x86_64=("https://github.com/asimov-platform/asimov-cli/releases/download/25.0.0-dev.2/asimov-linux-x86.gz")
source_aarch64=("https://github.com/asimov-platform/asimov-cli/releases/download/25.0.0-dev.2/asimov-linux-arm.gz")

sha256sums_x86_64=("a64251f846d0cc0280a7f83f25f0db0c4f15ef4caf349ccd45dad22250866060")
sha256sums_aarch64=("e9ca2393fe6147a01f10a36bd162b8f014fcfc1e964bb65a33e6d0920b34960d")

package() {
    cd "$srcdir"

    # Determine the correct filename
    if [[ "$CARCH" == "x86_64" ]]; then
        source_file="asimov-linux-x86.gz"
    elif [[ "$CARCH" == "aarch64" ]]; then
        source_file="asimov-linux-arm.gz"
    else
        echo "Error: Unsupported architecture $CARCH"
        exit 1
    fi

    # Debugging: List directory contents before extraction
    echo "üîç Contents of $srcdir before extraction:"
    ls -lah "$srcdir"

    # Check if the file exists
    if [[ ! -f "$source_file" ]]; then
        echo "‚ùå Error: Expected file $source_file not found!"
        exit 1
    fi

    echo "üìÇ Extracting $source_file..."
    gunzip -f "$source_file"
    extracted_file="${source_file%.gz}"

    # Debugging: Check extracted binary format
    echo "üîé Checking extracted file: $extracted_file"
    ls -lah "$extracted_file"
    file "$extracted_file"

    # Verify the SHA256 checksum
    expected_sha=""
    actual_sha=$(sha256sum "$extracted_file" | awk '{print $1}')

    if [[ "$CARCH" == "x86_64" ]]; then
        expected_sha="${sha256sums_x86_64[0]}"
    elif [[ "$CARCH" == "aarch64" ]]; then
        expected_sha="${sha256sums_aarch64[0]}"
    fi

    echo "‚úÖ Expected SHA: $expected_sha"
    echo "üîé Actual SHA:   $actual_sha"

    if [[ "$expected_sha" != "$actual_sha" ]]; then
        echo "‚ùå Error: SHA256 checksum does not match!"
        exit 1
    fi

    # Ensure the binary is executable
    chmod +x "$extracted_file"

    # Verify architecture of extracted file
    expected_arch=""
    if [[ "$CARCH" == "x86_64" ]]; then
        expected_arch="x86-64"
    elif [[ "$CARCH" == "aarch64" ]]; then
        expected_arch="ARM aarch64"
    fi

    actual_arch=$(file "$extracted_file" | grep -oE 'x86-64|ARM aarch64')

    if [[ "$actual_arch" != "$expected_arch" ]]; then
        echo "‚ùå Error: Extracted binary ($actual_arch) does not match expected architecture ($expected_arch)!"
        exit 1
    fi

    # Debugging: Check binary dependencies
    echo "üîé Checking dynamic linking requirements..."
    ldd "$extracted_file" || echo "‚ö†Ô∏è ldd failed (binary may be statically linked)"

    # Test if the binary runs
    echo "üöÄ Testing execution of the binary..."
    "$extracted_file" --help || echo "‚ùå Execution failed!"

    # Install into /usr/bin/
    install -Dm755 "$extracted_file" "$pkgdir/usr/bin/asimov"
}
